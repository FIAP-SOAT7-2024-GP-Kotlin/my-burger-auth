name: Deploy DigitalOcean Function

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install doctl
        run: |
          sudo snap install doctl

      - name: Overwrite .env file with secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> packages/authentication/authenticate/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> packages/authentication/authenticate/.env
          echo "DATABASE_USER=${{ secrets.DATABASE_USERNAME }}" >> packages/authentication/authenticate/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> packages/authentication/authenticate/.env
          echo "DATABASE_SCHEMA=${{ secrets.DATABASE_SCHEMA }}" >> packages/authentication/authenticate/.env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> packages/authentication/authenticate/.env
          echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> packages/authentication/authenticate/.env

      - name: Authenticate with DigitalOcean
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        run: |
          doctl auth init --access-token $DIGITALOCEAN_ACCESS_TOKEN

      - name: Connect to DigitalOcean Functions Namespace
        run: |
          doctl serverless connect

      - name: Deploy Function to DigitalOcean
        working-directory: ../
        run: |
          echo $PWD
          ls -la
          cat packages/authentication/authenticate/.env
          doctl serverless deploy my-burger-auth --remote-build --incremental